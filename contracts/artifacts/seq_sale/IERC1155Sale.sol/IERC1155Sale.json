{
    "abi": [
        {
            "type": "function",
            "name": "globalSaleDetails",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IERC1155SaleFunctions.SaleDetails",
                    "components": [
                        {
                            "name": "cost",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "supplyCap",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "startTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "endTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "merkleRoot",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "mint",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "tokenIds",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "amounts",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "paymentToken",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "maxTotal",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "proof",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "paymentToken",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "tokenSaleDetails",
            "inputs": [
                {
                    "name": "tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IERC1155SaleFunctions.SaleDetails",
                    "components": [
                        {
                            "name": "cost",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "supplyCap",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "startTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "endTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "merkleRoot",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "GlobalSaleDetailsUpdated",
            "inputs": [
                {
                    "name": "cost",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "supplyCap",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "startTime",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                },
                {
                    "name": "endTime",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                },
                {
                    "name": "merkleRoot",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TokenSaleDetailsUpdated",
            "inputs": [
                {
                    "name": "tokenId",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "cost",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "supplyCap",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "startTime",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                },
                {
                    "name": "endTime",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                },
                {
                    "name": "merkleRoot",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "GlobalSaleInactive",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientPayment",
            "inputs": [
                {
                    "name": "currency",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "expected",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "actual",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "InsufficientSupply",
            "inputs": [
                {
                    "name": "currentSupply",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "requestedAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "maxSupply",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "InvalidInitialization",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidSaleDetails",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidTokenIds",
            "inputs": []
        },
        {
            "type": "error",
            "name": "SaleInactive",
            "inputs": [
                {
                    "name": "tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        }
    ],
    "bytecode": "0x",
    "deployedBytecode": "0x",
    "methodIdentifiers": {
        "globalSaleDetails()": "119cd50c",
        "mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])": "60e606f6",
        "paymentToken()": "3013ce29",
        "tokenSaleDetails(uint256)": "0869678c"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"GlobalSaleInactive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"}],\"name\":\"InsufficientSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleDetails\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenIds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SaleInactive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"GlobalSaleDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"TokenSaleDetailsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"globalSaleDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IERC1155SaleFunctions.SaleDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTotal\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenSaleDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IERC1155SaleFunctions.SaleDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InsufficientPayment(address,uint256,uint256)\":[{\"params\":{\"actual\":\"Actual amount of tokens.\",\"currency\":\"Currency address. address(0) indicates ETH.\",\"expected\":\"Expected amount of tokens.\"}}],\"SaleInactive(uint256)\":[{\"params\":{\"tokenId\":\"Invalid Token ID.\"}}]},\"kind\":\"dev\",\"methods\":{\"globalSaleDetails()\":{\"returns\":{\"_0\":\"Sale details.\"}},\"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])\":{\"details\":\"tokenIds must be sorted ascending without duplicates.An empty proof is supplied when no proof is required.\",\"params\":{\"amounts\":\"Amounts of tokens to mint.\",\"data\":\"Data to pass if receiver is contract.\",\"maxTotal\":\"Maximum amount of payment tokens.\",\"paymentToken\":\"ERC20 token address to accept payment in. address(0) indicates ETH.\",\"proof\":\"Merkle proof for allowlist minting.\",\"to\":\"Address to mint tokens to.\",\"tokenIds\":\"Token IDs to mint.\"}},\"paymentToken()\":{\"returns\":{\"_0\":\"Payment token address.\"}},\"tokenSaleDetails(uint256)\":{\"params\":{\"tokenId\":\"Token ID to get sale details for.\"},\"returns\":{\"_0\":\"Sale details.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"GlobalSaleInactive()\":[{\"notice\":\"Sale is not active globally.\"}],\"InsufficientPayment(address,uint256,uint256)\":[{\"notice\":\"Insufficient tokens for payment.\"}],\"InsufficientSupply(uint256,uint256,uint256)\":[{\"notice\":\"Insufficient supply of tokens.\"}],\"InvalidInitialization()\":[{\"notice\":\"Contract already initialized.\"}],\"InvalidSaleDetails()\":[{\"notice\":\"Sale details supplied are invalid.\"}],\"InvalidTokenIds()\":[{\"notice\":\"Invalid token IDs.\"}],\"SaleInactive(uint256)\":[{\"notice\":\"Sale is not active.\"}]},\"kind\":\"user\",\"methods\":{\"globalSaleDetails()\":{\"notice\":\"Get global sales details.Global sales details apply to all tokens.Global sales details are overriden when token sale is active.\"},\"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])\":{\"notice\":\"Mint tokens.Sale must be active for all tokens.\"},\"paymentToken()\":{\"notice\":\"Get payment token.address(0) indicates payment in ETH.\"},\"tokenSaleDetails(uint256)\":{\"notice\":\"Get token sale details.Token sale details override global sale details.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol\":\"IERC1155Sale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol\":{\"keccak256\":\"0x153d0f88e91beedc685c1ceae856d69a0267c366e9eb0d6be0976244f921478e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8f5b2af7e2dafbba179286f1b5d78b42296d43275248b8bca37fc91af457dec2\",\"dweb:/ipfs/QmaKtmBN5JUm8vQCu75iUupsisLv1mcvG5ETZ2xsZxXGsk\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.19+commit.7dd6d404"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [],
                    "type": "error",
                    "name": "GlobalSaleInactive"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "currency",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "expected",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "actual",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "InsufficientPayment"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "currentSupply",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "requestedAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "maxSupply",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "InsufficientSupply"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidInitialization"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidSaleDetails"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidTokenIds"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "tokenId",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "SaleInactive"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "cost",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "supplyCap",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint64",
                            "name": "startTime",
                            "type": "uint64",
                            "indexed": false
                        },
                        {
                            "internalType": "uint64",
                            "name": "endTime",
                            "type": "uint64",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes32",
                            "name": "merkleRoot",
                            "type": "bytes32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "GlobalSaleDetailsUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "tokenId",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "cost",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "supplyCap",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint64",
                            "name": "startTime",
                            "type": "uint64",
                            "indexed": false
                        },
                        {
                            "internalType": "uint64",
                            "name": "endTime",
                            "type": "uint64",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes32",
                            "name": "merkleRoot",
                            "type": "bytes32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TokenSaleDetailsUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "globalSaleDetails",
                    "outputs": [
                        {
                            "internalType": "struct IERC1155SaleFunctions.SaleDetails",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "cost",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "supplyCap",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "startTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "endTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "merkleRoot",
                                    "type": "bytes32"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "tokenIds",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "amounts",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        },
                        {
                            "internalType": "address",
                            "name": "paymentToken",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "maxTotal",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "proof",
                            "type": "bytes32[]"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "mint"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "paymentToken",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "tokenId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "tokenSaleDetails",
                    "outputs": [
                        {
                            "internalType": "struct IERC1155SaleFunctions.SaleDetails",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "cost",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "supplyCap",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "startTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "endTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "merkleRoot",
                                    "type": "bytes32"
                                }
                            ]
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "globalSaleDetails()": {
                        "returns": {
                            "_0": "Sale details."
                        }
                    },
                    "mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])": {
                        "details": "tokenIds must be sorted ascending without duplicates.An empty proof is supplied when no proof is required.",
                        "params": {
                            "amounts": "Amounts of tokens to mint.",
                            "data": "Data to pass if receiver is contract.",
                            "maxTotal": "Maximum amount of payment tokens.",
                            "paymentToken": "ERC20 token address to accept payment in. address(0) indicates ETH.",
                            "proof": "Merkle proof for allowlist minting.",
                            "to": "Address to mint tokens to.",
                            "tokenIds": "Token IDs to mint."
                        }
                    },
                    "paymentToken()": {
                        "returns": {
                            "_0": "Payment token address."
                        }
                    },
                    "tokenSaleDetails(uint256)": {
                        "params": {
                            "tokenId": "Token ID to get sale details for."
                        },
                        "returns": {
                            "_0": "Sale details."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "globalSaleDetails()": {
                        "notice": "Get global sales details.Global sales details apply to all tokens.Global sales details are overriden when token sale is active."
                    },
                    "mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])": {
                        "notice": "Mint tokens.Sale must be active for all tokens."
                    },
                    "paymentToken()": {
                        "notice": "Get payment token.address(0) indicates payment in ETH."
                    },
                    "tokenSaleDetails(uint256)": {
                        "notice": "Get token sale details.Token sale details override global sale details."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "0xsequence/=lib/0xsequence/",
                "@0xsequence/contracts-library/=src/",
                "@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/",
                "@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/",
                "@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "@openzeppelin/=lib/openzeppelin/",
                "chiru-labs/=lib/chiru-labs/",
                "ds-test/=lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
                "erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/",
                "erc721a/=lib/chiru-labs/erc721a/",
                "forge-std/=lib/forge-std/src/",
                "murky/=lib/murky/src/",
                "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
                "openzeppelin/=lib/openzeppelin/",
                "solady/=lib/solady/src/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 20000
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/tokens/ERC1155/utility/sale/IERC1155Sale.sol": "IERC1155Sale"
            },
            "evmVersion": "paris",
            "libraries": {},
            "viaIR": true
        },
        "sources": {
            "src/tokens/ERC1155/utility/sale/IERC1155Sale.sol": {
                "keccak256": "0x153d0f88e91beedc685c1ceae856d69a0267c366e9eb0d6be0976244f921478e",
                "urls": [
                    "bzz-raw://8f5b2af7e2dafbba179286f1b5d78b42296d43275248b8bca37fc91af457dec2",
                    "dweb:/ipfs/QmaKtmBN5JUm8vQCu75iUupsisLv1mcvG5ETZ2xsZxXGsk"
                ],
                "license": "Apache-2.0"
            }
        },
        "version": 1
    },
    "id": 45
}
