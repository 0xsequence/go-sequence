// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package walletutils

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/0xsequence/ethkit/go-ethereum"
	"github.com/0xsequence/ethkit/go-ethereum/accounts/abi"
	"github.com/0xsequence/ethkit/go-ethereum/accounts/abi/bind"
	"github.com/0xsequence/ethkit/go-ethereum/common"
	"github.com/0xsequence/ethkit/go-ethereum/core/types"
	"github.com/0xsequence/ethkit/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// IModuleCallsTransaction is an auto generated low-level Go binding around an user-defined struct.
type IModuleCallsTransaction struct {
	DelegateCall  bool
	RevertOnError bool
	GasLimit      *big.Int
	Target        common.Address
	Value         *big.Int
	Data          []byte
}

// RequireUtilsMember is an auto generated low-level Go binding around an user-defined struct.
type RequireUtilsMember struct {
	Weight *big.Int
	Signer common.Address
}

// WalletUtilsMetaData contains all meta data concerning the WalletUtils contract.
var WalletUtilsMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mainModule\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_signers\",\"type\":\"bytes\"}],\"name\":\"RequiredConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"RequiredSigner\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"callBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"callBlockhash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"callCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"callCodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"codeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"callCodeSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callGasLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callOrigin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"knownImageHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"lastImageHashUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastSignerUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastWalletUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"structIModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"multiCall\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"_successes\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"internalType\":\"structRequireUtils.Member[]\",\"name\":\"_members\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_index\",\"type\":\"bool\"}],\"name\":\"publishConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_sizeMembers\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_index\",\"type\":\"bool\"}],\"name\":\"publishInitialSigners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"requireMinNonce\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"requireNonExpired\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60c06040523480156200001157600080fd5b5060405162002ad638038062002ad68339810160408190526200003491620000cd565b8181816001600160a01b031660a0816001600160a01b031660601b8152505060405180606001604052806028815260200162002aae60289139816001600160a01b03166040516020016200008a92919062000104565b60408051601f198184030181529190528051602090910120608052506200014692505050565b80516001600160a01b0381168114620000c857600080fd5b919050565b60008060408385031215620000e0578182fd5b620000eb83620000b0565b9150620000fb60208401620000b0565b90509250929050565b60008351815b818110156200012657602081870181015185830152016200010a565b81811115620001355782828501525b509190910191825250602001919050565b60805160a05160601c61293762000177600039806106515280610b1b5250806106755280610b3f52506129376000f3fe6080604052600436106101805760003560e01c806398f9fbc4116100d6578063d1db39071161007f578063e90f13e711610059578063e90f13e714610395578063f209883a146103ea578063ffd7d741146103ff57610180565b8063d1db390714610395578063d5b5337f146103aa578063e717aba9146103ca57610180565b8063c272d5c3116100b0578063c272d5c314610333578063c39f2d5c14610348578063c66764e11461036857610180565b806398f9fbc4146102e9578063aeea5fb5146102fe578063b472f0a21461031357610180565b806348acd29f116101385780637ae99638116101125780637ae99638146102875780637f29d538146102a7578063984395bc146102c757610180565b806348acd29f14610227578063543196eb146102475780637082503b1461026757610180565b80631cd05dc4116101695780631cd05dc4146101d057806343d9c935146101f057806344d466c21461020557610180565b80630fdecfac146101855780631551f0ab146101b0575b600080fd5b34801561019157600080fd5b5061019a610420565b6040516101a79190612190565b60405180910390f35b3480156101bc57600080fd5b5061019a6101cb366004611e76565b610424565b3480156101dc57600080fd5b5061019a6101eb366004611bea565b610436565b3480156101fc57600080fd5b5061019a610448565b34801561021157600080fd5b50610225610220366004611ca4565b610450565b005b34801561023357600080fd5b5061019a610242366004611bea565b61080a565b34801561025357600080fd5b5061019a610262366004611bea565b610828565b34801561027357600080fd5b50610225610282366004611c0b565b61082c565b34801561029357600080fd5b5061019a6102a2366004611bea565b610cb0565b3480156102b357600080fd5b506102256102c2366004611e76565b610cc2565b3480156102d357600080fd5b506102dc610cfe565b6040516101a79190612000565b3480156102f557600080fd5b506102dc610d02565b34801561030a57600080fd5b5061019a610d06565b34801561031f57600080fd5b5061022561032e366004611c7b565b610d0a565b34801561033f57600080fd5b5061019a610de8565b34801561035457600080fd5b5061019a610363366004611bea565b610dec565b34801561037457600080fd5b50610388610383366004611bea565b610df0565b6040516101a791906121c5565b3480156103a157600080fd5b5061019a610e35565b3480156103b657600080fd5b5061019a6103c5366004611e76565b610e39565b3480156103d657600080fd5b5061019a6103e5366004611bea565b610e3d565b3480156103f657600080fd5b5061019a610e4f565b61041261040d366004611d34565b610e53565b6040516101a7929190612021565b4690565b60036020526000908152604090205481565b60006020819052908152604090205481565b60005a905090565b8360005b838110156104e9578185858381811061046957fe5b9050604002016000013586868481811061047f57fe5b90506040020160200160208101906104979190611bea565b6040516020016104a993929190612199565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209150600101610454565b506000808773ffffffffffffffffffffffffffffffffffffffff166351605d8060e01b60405160200161051c9190611f54565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261055491611f81565b6000604051808303816000865af19150503d8060008114610591576040519150601f19603f3d011682016040523d82523d6000602084013e610596565b606091505b50915091508180156105a9575080516020145b1561060e576000818060200190518101906105c49190611e8e565b9050838114610608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff90612543565b60405180910390fd5b50610732565b60405173ffffffffffffffffffffffffffffffffffffffff89169061069d907fff00000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009087907f000000000000000000000000000000000000000000000000000000000000000090602001611ef0565b6040516020818303038152906040528051906020012060001c73ffffffffffffffffffffffffffffffffffffffff1614610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff906125a0565b83156107325773ffffffffffffffffffffffffffffffffffffffff881660009081526002602052604090208390555b828873ffffffffffffffffffffffffffffffffffffffff167fb502b7446ca079086188acf3abef47c2f464f2ee9a72fcdf05ffcb74dcc17cee89898960405160200161077f9291906120c7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526107b89291612623565b60405180910390a383156108005773ffffffffffffffffffffffffffffffffffffffff8816600090815260016020908152604080832043908190558684526003909252909120555b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116315b919050565b3f90565b600080610838846110c3565b9150915060008046905080898960405160200161085793929190611f9d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012091505061ffff831660008767ffffffffffffffff811180156108ae57600080fd5b506040519080825280602002602001820160405280156108e857816020015b6108d5611b1c565b8152602001906001900390816108cd5790505b50905060005b8751851015610a9f57600080806109058b89611131565b995060ff9182169450169150600183141561092d576109248b896111b2565b98509050610a20565b8261095f57606061093e8c8a61122a565b9950905061094c88826112db565b91506109598f838d611665565b50610a20565b60028314156109ee576109728b896111b2565b9850905060006109828c8a6116f3565b995061ffff16905060606109978d8b84611764565b9a5090506109a6898483611853565b6109dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff9061242c565b50506109e98e828c611665565b610a20565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff906121d8565b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250858581518110610a5757fe5b60200260200101819052508380600101945050858282604051602001610a7f93929190612199565b6040516020818303038152906040528051906020012095505050506108ee565b888114610ad8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff906124e6565b60405173ffffffffffffffffffffffffffffffffffffffff8c1690610b67907fff00000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009087907f000000000000000000000000000000000000000000000000000000000000000090602001611ef0565b6040516020818303038152906040528051906020012060001c73ffffffffffffffffffffffffffffffffffffffff1614610bcd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff906123a9565b828b73ffffffffffffffffffffffffffffffffffffffff167fb502b7446ca079086188acf3abef47c2f464f2ee9a72fcdf05ffcb74dcc17cee8885604051602001610c18919061212b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610c5192916125fe565b60405180910390a38615610ca35773ffffffffffffffffffffffffffffffffffffffff8b1660008181526001602090815260408083204390819055878452600383528184205592825260029052208390555b5050505050505050505050565b60026020526000908152604090205481565b804210610cfb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff9061234c565b50565b3290565b4190565b4490565b600080610d1683611a9b565b9150915060008473ffffffffffffffffffffffffffffffffffffffff16638c3f5563846040518263ffffffff1660e01b8152600401610d559190612190565b60206040518083038186803b158015610d6d57600080fd5b505afa158015610d81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da59190611e8e565b905081811015610de1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff906122ef565b5050505050565b3a90565b3b90565b60408051603f833b9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092528181529080600060208401853c50919050565b4590565b4090565b60016020526000908152604090205481565b4290565b606080825167ffffffffffffffff81118015610e6e57600080fd5b50604051908082528060200260200182016040528015610e98578160200160208202803683370190505b509150825167ffffffffffffffff81118015610eb357600080fd5b50604051908082528060200260200182016040528015610ee757816020015b6060815260200190600190039081610ed25790505b50905060005b83518110156110bd576000848281518110610f0457fe5b60200260200101519050806000015115610f4a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff90612489565b80604001515a1015610f88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff90612292565b806060015173ffffffffffffffffffffffffffffffffffffffff1681608001518260400151600014610fbe578260400151610fc0565b5a5b908360a00151604051610fd39190611f81565b600060405180830381858888f193505050503d8060008114611011576040519150601f19603f3d011682016040523d82523d6000602084013e611016565b606091505b5085848151811061102357fe5b6020026020010185858151811061103657fe5b602002602001018290528215151515815250505083828151811061105657fe5b60200260200101518061107e575084828151811061107057fe5b602002602001015160200151155b6110b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff90612235565b50600101610eed565b50915091565b6020810151815160f09190911c9060029081111561112c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061272b6027913960400191505060405180910390fd5b915091565b8082016020015160f881901c9060f01c60ff166002830183811161115157fe5b84518111156111ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061285d6026913960400191505060405180910390fd5b9250925092565b8082016020015160601c601482018281116111c957fe5b8351811115611223576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806127086023913960400191505060405180910390fd5b9250929050565b60408051604280825260808201909252606091600091906020820181803683370190505091508284016020018051602084015260208101516040840152602281015160428401525060428301905082811161128157fe5b8351811115611223576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806127fe6023913960400191505060405180910390fd5b60008151604214611337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806126ce603a913960400191505060405180910390fd5b60008260018451038151811061134957fe5b602001015160f81c60f81b60f81c60ff16905060008360408151811061136b57fe5b016020015160f81c905060006113818582611ab4565b90506000611390866020611ab4565b90507f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a081111561140b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180612691603d913960400191505060405180910390fd5b8260ff16601b1415801561142357508260ff16601c14155b15611479576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180612752603d913960400191505060405180910390fd5b60018414156114ed5760018784848460405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156114dc573d6000803e3d6000fd5b5050506020604051035194506115ef565b600284141561159e5760018760405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c018281526020019150506040516020818303038152906040528051906020012084848460405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156114dc573d6000803e3d6000fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180612821603c913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff851661165b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061278f6030913960400191505060405180910390fd5b5050505092915050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f600ba597427f042bcd559a0d06fa1732cc104d6dd43cbe8845b5a0e804b2b39f60405160405180910390a380156116ee5773ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090204390555b505050565b8082016020015160f01c6002820182811161170a57fe5b8351811115611223576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806128a46022913960400191505060405180910390fd5b606060008267ffffffffffffffff8111801561177f57600080fd5b506040519080825280601f01601f1916602001820160405280156117aa576020820181803683370190505b509150838501602001600060205b858110156117d1579082015184820152602081016117b8565b84860160200180519390920151908501525250828201838110156117f157fe5b845181111561184b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806128836021913960400191505060405180910390fd5b935093915050565b6000808260018451038151811061186657fe5b016020015160f81c9050600181148061187f5750600281145b156118c3578373ffffffffffffffffffffffffffffffffffffffff166118a586856112db565b73ffffffffffffffffffffffffffffffffffffffff16149150611a93565b6003811415611a425782517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81018452604080517f1626ba7e000000000000000000000000000000000000000000000000000000008152600481018881526024820192835286516044830152865173ffffffffffffffffffffffffffffffffffffffff891693631626ba7e938b938a9390929160640190602085019080838360005b8381101561197d578181015183820152602001611965565b50505050905090810190601f1680156119aa5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b1580156119c857600080fd5b505afa1580156119dc573d6000803e3d6000fd5b505050506040513d60208110156119f257600080fd5b50519084527fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e00000000000000000000000000000000000000000000000000000000149150611a93565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f8152602001806127bf603f913960400191505060405180910390fd5b509392505050565b606081901c916bffffffffffffffffffffffff90911690565b60008160200183511015611b13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001806128c6603c913960400191505060405180910390fd5b50016020015190565b604080518082019091526000808252602082015290565b803573ffffffffffffffffffffffffffffffffffffffff8116811461082357600080fd5b8035801515811461082357600080fd5b600082601f830112611b77578081fd5b813567ffffffffffffffff811115611b8b57fe5b611bbc60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161263c565b818152846020838601011115611bd0578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215611bfb578081fd5b611c0482611b33565b9392505050565b600080600080600060a08688031215611c22578081fd5b611c2b86611b33565b94506020860135935060408601359250606086013567ffffffffffffffff811115611c54578182fd5b611c6088828901611b67565b925050611c6f60808701611b57565b90509295509295909350565b60008060408385031215611c8d578182fd5b611c9683611b33565b946020939093013593505050565b600080600080600060808688031215611cbb578081fd5b611cc486611b33565b945060208601359350604086013567ffffffffffffffff80821115611ce7578283fd5b818801915088601f830112611cfa578283fd5b813581811115611d08578384fd5b896020604083028501011115611d1c578384fd5b602083019550809450505050611c6f60608701611b57565b60006020808385031215611d46578182fd5b823567ffffffffffffffff80821115611d5d578384fd5b818501915085601f830112611d70578384fd5b813581811115611d7c57fe5b611d89848583020161263c565b81815284810190848601875b84811015611e67578135870160c0807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0838f03011215611dd3578a8bfd5b604080518281018181108b82111715611de857fe5b8252611df5848d01611b57565b8152611e02828501611b57565b8c82015260608085013583830152611e1c60808601611b33565b9082015260a08481013560808301529284013592915089831115611e3e578c8dfd5b611e4c8f8d85870101611b67565b91810191909152865250509287019290870190600101611d95565b50909998505050505050505050565b600060208284031215611e87578081fd5b5035919050565b600060208284031215611e9f578081fd5b5051919050565b60008151808452611ebe816020860160208601612660565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7fff0000000000000000000000000000000000000000000000000000000000000094909416845260609290921b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830152603582015260550190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260040190565b60008251611f93818460208701612660565b9190910192915050565b7f19010000000000000000000000000000000000000000000000000000000000008152600281019390935260609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166022830152603682015260560190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b604080825283519082018190526000906020906060840190828701845b8281101561205c57815115158452928401929084019060010161203e565b5050508381038285015284518082528282019080840283018401878501865b83811015611e67577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08684030185526120b5838351611ea6565b9487019492509086019060010161207b565b6020808252818101839052600090604080840186845b8781101561211e578135835273ffffffffffffffffffffffffffffffffffffffff612109868401611b33565b168386015291830191908301906001016120dd565b5090979650505050505050565b602080825282518282018190526000919060409081850190868401855b828110156121835781518051855286015173ffffffffffffffffffffffffffffffffffffffff16868501529284019290850190600101612148565b5091979650505050505050565b90815260200190565b928352602083019190915273ffffffffffffffffffffffffffffffffffffffff16604082015260600190565b600060208252611c046020830184611ea6565b6020808252603a908201527f526571756972655574696c73237075626c697368496e697469616c5369676e6560408201527f72733a20494e56414c49445f5349474e41545552455f464c4147000000000000606082015260800190565b60208082526027908201527f4d756c746943616c6c5574696c73236d756c746943616c6c3a2043414c4c5f5260408201527f4556455254454400000000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f4d756c746943616c6c5574696c73236d756c746943616c6c3a204e4f545f454e60408201527f4f5547485f474153000000000000000000000000000000000000000000000000606082015260800190565b60208082526032908201527f526571756972655574696c7323726571756972654d696e4e6f6e63653a204e4f60408201527f4e43455f42454c4f575f52455155495245440000000000000000000000000000606082015260800190565b60208082526027908201527f526571756972655574696c7323726571756972654e6f6e457870697265643a2060408201527f4558504952454400000000000000000000000000000000000000000000000000606082015260800190565b60208082526048908201527f526571756972655574696c73237075626c697368496e697469616c5369676e6560408201527f72733a20554e45585045435445445f434f554e5445524641435455414c5f494d60608201527f4147455f48415348000000000000000000000000000000000000000000000000608082015260a00190565b60208082526032908201527f4d6f64756c6541757468235f7369676e617475726556616c69646174696f6e3a60408201527f20494e56414c49445f5349474e41545552450000000000000000000000000000606082015260800190565b60208082526032908201527f4d756c746943616c6c5574696c73236d756c746943616c6c3a2064656c65676160408201527f746543616c6c206e6f7420616c6c6f7765640000000000000000000000000000606082015260800190565b60208082526039908201527f526571756972655574696c73237075626c697368496e697469616c5369676e6560408201527f72733a20494e56414c49445f4d454d424552535f434f554e5400000000000000606082015260800190565b60208082526031908201527f526571756972655574696c73237075626c697368436f6e6669673a20554e455860408201527f5045435445445f494d4147455f48415348000000000000000000000000000000606082015260800190565b602080825260409082018190527f526571756972655574696c73237075626c697368436f6e6669673a20554e4558908201527f5045435445445f434f554e5445524641435455414c5f494d4147455f48415348606082015260800190565b600061ffff841682526040602083015261261b6040830184611ea6565b949350505050565b60008382526040602083015261261b6040830184611ea6565b60405181810167ffffffffffffffff8111828210171561265857fe5b604052919050565b60005b8381101561267b578181015183820152602001612663565b8381111561268a576000848401525b5050505056fe5369676e617475726556616c696461746f72237265636f7665725369676e65723a20696e76616c6964207369676e6174757265202773272076616c75655369676e617475726556616c696461746f72237265636f7665725369676e65723a20696e76616c6964207369676e6174757265206c656e6774684c696242797465732372656164416464726573733a204f55545f4f465f424f554e44534c696242797465732372656164466972737455696e7431363a204f55545f4f465f424f554e44535369676e617475726556616c696461746f72237265636f7665725369676e65723a20696e76616c6964207369676e6174757265202776272076616c75655369676e617475726556616c696461746f72237265636f7665725369676e65723a20494e56414c49445f5349474e45525369676e617475726556616c696461746f7223697356616c69645369676e61747572653a20554e535550504f525445445f5349474e41545552455f545950454c696242797465732372656164427974657336363a204f55545f4f465f424f554e44535369676e617475726556616c696461746f72237265636f7665725369676e65723a20554e535550504f525445445f5349474e41545552455f545950454c69624279746573237265616455696e743855696e74383a204f55545f4f465f424f554e44534c69624279746573237265616442797465733a204f55545f4f465f424f554e44534c69624279746573237265616455696e7431363a204f55545f4f465f424f554e44534c696242797465732372656164427974657333323a20475245415445525f4f525f455155414c5f544f5f33325f4c454e4754485f5245515549524544a26469706673582212200abb842b6eea58df953f048e3a9aa7589fd3ce15ca086e43b61cdb0c0c42723564736f6c63430007060033603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3",
}

// WalletUtilsABI is the input ABI used to generate the binding from.
// Deprecated: Use WalletUtilsMetaData.ABI instead.
var WalletUtilsABI = WalletUtilsMetaData.ABI

// WalletUtilsBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use WalletUtilsMetaData.Bin instead.
var WalletUtilsBin = WalletUtilsMetaData.Bin

// DeployWalletUtils deploys a new Ethereum contract, binding an instance of WalletUtils to it.
func DeployWalletUtils(auth *bind.TransactOpts, backend bind.ContractBackend, _factory common.Address, _mainModule common.Address) (common.Address, *types.Transaction, *WalletUtils, error) {
	parsed, err := WalletUtilsMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(WalletUtilsBin), backend, _factory, _mainModule)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &WalletUtils{WalletUtilsCaller: WalletUtilsCaller{contract: contract}, WalletUtilsTransactor: WalletUtilsTransactor{contract: contract}, WalletUtilsFilterer: WalletUtilsFilterer{contract: contract}}, nil
}

// WalletUtils is an auto generated Go binding around an Ethereum contract.
type WalletUtils struct {
	WalletUtilsCaller     // Read-only binding to the contract
	WalletUtilsTransactor // Write-only binding to the contract
	WalletUtilsFilterer   // Log filterer for contract events
}

// WalletUtilsCaller is an auto generated read-only Go binding around an Ethereum contract.
type WalletUtilsCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// WalletUtilsTransactor is an auto generated write-only Go binding around an Ethereum contract.
type WalletUtilsTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// WalletUtilsFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type WalletUtilsFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// WalletUtilsSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type WalletUtilsSession struct {
	Contract     *WalletUtils      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// WalletUtilsCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type WalletUtilsCallerSession struct {
	Contract *WalletUtilsCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// WalletUtilsTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type WalletUtilsTransactorSession struct {
	Contract     *WalletUtilsTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// WalletUtilsRaw is an auto generated low-level Go binding around an Ethereum contract.
type WalletUtilsRaw struct {
	Contract *WalletUtils // Generic contract binding to access the raw methods on
}

// WalletUtilsCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type WalletUtilsCallerRaw struct {
	Contract *WalletUtilsCaller // Generic read-only contract binding to access the raw methods on
}

// WalletUtilsTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type WalletUtilsTransactorRaw struct {
	Contract *WalletUtilsTransactor // Generic write-only contract binding to access the raw methods on
}

// NewWalletUtils creates a new instance of WalletUtils, bound to a specific deployed contract.
func NewWalletUtils(address common.Address, backend bind.ContractBackend) (*WalletUtils, error) {
	contract, err := bindWalletUtils(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &WalletUtils{WalletUtilsCaller: WalletUtilsCaller{contract: contract}, WalletUtilsTransactor: WalletUtilsTransactor{contract: contract}, WalletUtilsFilterer: WalletUtilsFilterer{contract: contract}}, nil
}

// NewWalletUtilsCaller creates a new read-only instance of WalletUtils, bound to a specific deployed contract.
func NewWalletUtilsCaller(address common.Address, caller bind.ContractCaller) (*WalletUtilsCaller, error) {
	contract, err := bindWalletUtils(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &WalletUtilsCaller{contract: contract}, nil
}

// NewWalletUtilsTransactor creates a new write-only instance of WalletUtils, bound to a specific deployed contract.
func NewWalletUtilsTransactor(address common.Address, transactor bind.ContractTransactor) (*WalletUtilsTransactor, error) {
	contract, err := bindWalletUtils(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &WalletUtilsTransactor{contract: contract}, nil
}

// NewWalletUtilsFilterer creates a new log filterer instance of WalletUtils, bound to a specific deployed contract.
func NewWalletUtilsFilterer(address common.Address, filterer bind.ContractFilterer) (*WalletUtilsFilterer, error) {
	contract, err := bindWalletUtils(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &WalletUtilsFilterer{contract: contract}, nil
}

// bindWalletUtils binds a generic wrapper to an already deployed contract.
func bindWalletUtils(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := WalletUtilsMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_WalletUtils *WalletUtilsRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _WalletUtils.Contract.WalletUtilsCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_WalletUtils *WalletUtilsRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WalletUtils.Contract.WalletUtilsTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_WalletUtils *WalletUtilsRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _WalletUtils.Contract.WalletUtilsTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_WalletUtils *WalletUtilsCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _WalletUtils.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_WalletUtils *WalletUtilsTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WalletUtils.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_WalletUtils *WalletUtilsTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _WalletUtils.Contract.contract.Transact(opts, method, params...)
}

// CallBalanceOf is a free data retrieval call binding the contract method 0x48acd29f.
//
// Solidity: function callBalanceOf(address _addr) view returns(uint256)
func (_WalletUtils *WalletUtilsCaller) CallBalanceOf(opts *bind.CallOpts, _addr common.Address) (*big.Int, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callBalanceOf", _addr)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CallBalanceOf is a free data retrieval call binding the contract method 0x48acd29f.
//
// Solidity: function callBalanceOf(address _addr) view returns(uint256)
func (_WalletUtils *WalletUtilsSession) CallBalanceOf(_addr common.Address) (*big.Int, error) {
	return _WalletUtils.Contract.CallBalanceOf(&_WalletUtils.CallOpts, _addr)
}

// CallBalanceOf is a free data retrieval call binding the contract method 0x48acd29f.
//
// Solidity: function callBalanceOf(address _addr) view returns(uint256)
func (_WalletUtils *WalletUtilsCallerSession) CallBalanceOf(_addr common.Address) (*big.Int, error) {
	return _WalletUtils.Contract.CallBalanceOf(&_WalletUtils.CallOpts, _addr)
}

// CallBlockNumber is a free data retrieval call binding the contract method 0xd1db3907.
//
// Solidity: function callBlockNumber() view returns(uint256)
func (_WalletUtils *WalletUtilsCaller) CallBlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callBlockNumber")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CallBlockNumber is a free data retrieval call binding the contract method 0xd1db3907.
//
// Solidity: function callBlockNumber() view returns(uint256)
func (_WalletUtils *WalletUtilsSession) CallBlockNumber() (*big.Int, error) {
	return _WalletUtils.Contract.CallBlockNumber(&_WalletUtils.CallOpts)
}

// CallBlockNumber is a free data retrieval call binding the contract method 0xd1db3907.
//
// Solidity: function callBlockNumber() view returns(uint256)
func (_WalletUtils *WalletUtilsCallerSession) CallBlockNumber() (*big.Int, error) {
	return _WalletUtils.Contract.CallBlockNumber(&_WalletUtils.CallOpts)
}

// CallBlockhash is a free data retrieval call binding the contract method 0xd5b5337f.
//
// Solidity: function callBlockhash(uint256 _i) view returns(bytes32)
func (_WalletUtils *WalletUtilsCaller) CallBlockhash(opts *bind.CallOpts, _i *big.Int) ([32]byte, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callBlockhash", _i)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// CallBlockhash is a free data retrieval call binding the contract method 0xd5b5337f.
//
// Solidity: function callBlockhash(uint256 _i) view returns(bytes32)
func (_WalletUtils *WalletUtilsSession) CallBlockhash(_i *big.Int) ([32]byte, error) {
	return _WalletUtils.Contract.CallBlockhash(&_WalletUtils.CallOpts, _i)
}

// CallBlockhash is a free data retrieval call binding the contract method 0xd5b5337f.
//
// Solidity: function callBlockhash(uint256 _i) view returns(bytes32)
func (_WalletUtils *WalletUtilsCallerSession) CallBlockhash(_i *big.Int) ([32]byte, error) {
	return _WalletUtils.Contract.CallBlockhash(&_WalletUtils.CallOpts, _i)
}

// CallChainId is a free data retrieval call binding the contract method 0x0fdecfac.
//
// Solidity: function callChainId() pure returns(uint256 id)
func (_WalletUtils *WalletUtilsCaller) CallChainId(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callChainId")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CallChainId is a free data retrieval call binding the contract method 0x0fdecfac.
//
// Solidity: function callChainId() pure returns(uint256 id)
func (_WalletUtils *WalletUtilsSession) CallChainId() (*big.Int, error) {
	return _WalletUtils.Contract.CallChainId(&_WalletUtils.CallOpts)
}

// CallChainId is a free data retrieval call binding the contract method 0x0fdecfac.
//
// Solidity: function callChainId() pure returns(uint256 id)
func (_WalletUtils *WalletUtilsCallerSession) CallChainId() (*big.Int, error) {
	return _WalletUtils.Contract.CallChainId(&_WalletUtils.CallOpts)
}

// CallCode is a free data retrieval call binding the contract method 0xc66764e1.
//
// Solidity: function callCode(address _addr) view returns(bytes code)
func (_WalletUtils *WalletUtilsCaller) CallCode(opts *bind.CallOpts, _addr common.Address) ([]byte, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callCode", _addr)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// CallCode is a free data retrieval call binding the contract method 0xc66764e1.
//
// Solidity: function callCode(address _addr) view returns(bytes code)
func (_WalletUtils *WalletUtilsSession) CallCode(_addr common.Address) ([]byte, error) {
	return _WalletUtils.Contract.CallCode(&_WalletUtils.CallOpts, _addr)
}

// CallCode is a free data retrieval call binding the contract method 0xc66764e1.
//
// Solidity: function callCode(address _addr) view returns(bytes code)
func (_WalletUtils *WalletUtilsCallerSession) CallCode(_addr common.Address) ([]byte, error) {
	return _WalletUtils.Contract.CallCode(&_WalletUtils.CallOpts, _addr)
}

// CallCodeHash is a free data retrieval call binding the contract method 0x543196eb.
//
// Solidity: function callCodeHash(address _addr) view returns(bytes32 codeHash)
func (_WalletUtils *WalletUtilsCaller) CallCodeHash(opts *bind.CallOpts, _addr common.Address) ([32]byte, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callCodeHash", _addr)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// CallCodeHash is a free data retrieval call binding the contract method 0x543196eb.
//
// Solidity: function callCodeHash(address _addr) view returns(bytes32 codeHash)
func (_WalletUtils *WalletUtilsSession) CallCodeHash(_addr common.Address) ([32]byte, error) {
	return _WalletUtils.Contract.CallCodeHash(&_WalletUtils.CallOpts, _addr)
}

// CallCodeHash is a free data retrieval call binding the contract method 0x543196eb.
//
// Solidity: function callCodeHash(address _addr) view returns(bytes32 codeHash)
func (_WalletUtils *WalletUtilsCallerSession) CallCodeHash(_addr common.Address) ([32]byte, error) {
	return _WalletUtils.Contract.CallCodeHash(&_WalletUtils.CallOpts, _addr)
}

// CallCodeSize is a free data retrieval call binding the contract method 0xc39f2d5c.
//
// Solidity: function callCodeSize(address _addr) view returns(uint256 size)
func (_WalletUtils *WalletUtilsCaller) CallCodeSize(opts *bind.CallOpts, _addr common.Address) (*big.Int, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callCodeSize", _addr)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CallCodeSize is a free data retrieval call binding the contract method 0xc39f2d5c.
//
// Solidity: function callCodeSize(address _addr) view returns(uint256 size)
func (_WalletUtils *WalletUtilsSession) CallCodeSize(_addr common.Address) (*big.Int, error) {
	return _WalletUtils.Contract.CallCodeSize(&_WalletUtils.CallOpts, _addr)
}

// CallCodeSize is a free data retrieval call binding the contract method 0xc39f2d5c.
//
// Solidity: function callCodeSize(address _addr) view returns(uint256 size)
func (_WalletUtils *WalletUtilsCallerSession) CallCodeSize(_addr common.Address) (*big.Int, error) {
	return _WalletUtils.Contract.CallCodeSize(&_WalletUtils.CallOpts, _addr)
}

// CallCoinbase is a free data retrieval call binding the contract method 0x98f9fbc4.
//
// Solidity: function callCoinbase() view returns(address)
func (_WalletUtils *WalletUtilsCaller) CallCoinbase(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callCoinbase")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CallCoinbase is a free data retrieval call binding the contract method 0x98f9fbc4.
//
// Solidity: function callCoinbase() view returns(address)
func (_WalletUtils *WalletUtilsSession) CallCoinbase() (common.Address, error) {
	return _WalletUtils.Contract.CallCoinbase(&_WalletUtils.CallOpts)
}

// CallCoinbase is a free data retrieval call binding the contract method 0x98f9fbc4.
//
// Solidity: function callCoinbase() view returns(address)
func (_WalletUtils *WalletUtilsCallerSession) CallCoinbase() (common.Address, error) {
	return _WalletUtils.Contract.CallCoinbase(&_WalletUtils.CallOpts)
}

// CallDifficulty is a free data retrieval call binding the contract method 0xaeea5fb5.
//
// Solidity: function callDifficulty() view returns(uint256)
func (_WalletUtils *WalletUtilsCaller) CallDifficulty(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callDifficulty")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CallDifficulty is a free data retrieval call binding the contract method 0xaeea5fb5.
//
// Solidity: function callDifficulty() view returns(uint256)
func (_WalletUtils *WalletUtilsSession) CallDifficulty() (*big.Int, error) {
	return _WalletUtils.Contract.CallDifficulty(&_WalletUtils.CallOpts)
}

// CallDifficulty is a free data retrieval call binding the contract method 0xaeea5fb5.
//
// Solidity: function callDifficulty() view returns(uint256)
func (_WalletUtils *WalletUtilsCallerSession) CallDifficulty() (*big.Int, error) {
	return _WalletUtils.Contract.CallDifficulty(&_WalletUtils.CallOpts)
}

// CallGasLeft is a free data retrieval call binding the contract method 0x43d9c935.
//
// Solidity: function callGasLeft() view returns(uint256)
func (_WalletUtils *WalletUtilsCaller) CallGasLeft(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callGasLeft")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CallGasLeft is a free data retrieval call binding the contract method 0x43d9c935.
//
// Solidity: function callGasLeft() view returns(uint256)
func (_WalletUtils *WalletUtilsSession) CallGasLeft() (*big.Int, error) {
	return _WalletUtils.Contract.CallGasLeft(&_WalletUtils.CallOpts)
}

// CallGasLeft is a free data retrieval call binding the contract method 0x43d9c935.
//
// Solidity: function callGasLeft() view returns(uint256)
func (_WalletUtils *WalletUtilsCallerSession) CallGasLeft() (*big.Int, error) {
	return _WalletUtils.Contract.CallGasLeft(&_WalletUtils.CallOpts)
}

// CallGasLimit is a free data retrieval call binding the contract method 0xe90f13e7.
//
// Solidity: function callGasLimit() view returns(uint256)
func (_WalletUtils *WalletUtilsCaller) CallGasLimit(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callGasLimit")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CallGasLimit is a free data retrieval call binding the contract method 0xe90f13e7.
//
// Solidity: function callGasLimit() view returns(uint256)
func (_WalletUtils *WalletUtilsSession) CallGasLimit() (*big.Int, error) {
	return _WalletUtils.Contract.CallGasLimit(&_WalletUtils.CallOpts)
}

// CallGasLimit is a free data retrieval call binding the contract method 0xe90f13e7.
//
// Solidity: function callGasLimit() view returns(uint256)
func (_WalletUtils *WalletUtilsCallerSession) CallGasLimit() (*big.Int, error) {
	return _WalletUtils.Contract.CallGasLimit(&_WalletUtils.CallOpts)
}

// CallGasPrice is a free data retrieval call binding the contract method 0xc272d5c3.
//
// Solidity: function callGasPrice() view returns(uint256)
func (_WalletUtils *WalletUtilsCaller) CallGasPrice(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callGasPrice")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CallGasPrice is a free data retrieval call binding the contract method 0xc272d5c3.
//
// Solidity: function callGasPrice() view returns(uint256)
func (_WalletUtils *WalletUtilsSession) CallGasPrice() (*big.Int, error) {
	return _WalletUtils.Contract.CallGasPrice(&_WalletUtils.CallOpts)
}

// CallGasPrice is a free data retrieval call binding the contract method 0xc272d5c3.
//
// Solidity: function callGasPrice() view returns(uint256)
func (_WalletUtils *WalletUtilsCallerSession) CallGasPrice() (*big.Int, error) {
	return _WalletUtils.Contract.CallGasPrice(&_WalletUtils.CallOpts)
}

// CallOrigin is a free data retrieval call binding the contract method 0x984395bc.
//
// Solidity: function callOrigin() view returns(address)
func (_WalletUtils *WalletUtilsCaller) CallOrigin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callOrigin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CallOrigin is a free data retrieval call binding the contract method 0x984395bc.
//
// Solidity: function callOrigin() view returns(address)
func (_WalletUtils *WalletUtilsSession) CallOrigin() (common.Address, error) {
	return _WalletUtils.Contract.CallOrigin(&_WalletUtils.CallOpts)
}

// CallOrigin is a free data retrieval call binding the contract method 0x984395bc.
//
// Solidity: function callOrigin() view returns(address)
func (_WalletUtils *WalletUtilsCallerSession) CallOrigin() (common.Address, error) {
	return _WalletUtils.Contract.CallOrigin(&_WalletUtils.CallOpts)
}

// CallTimestamp is a free data retrieval call binding the contract method 0xf209883a.
//
// Solidity: function callTimestamp() view returns(uint256)
func (_WalletUtils *WalletUtilsCaller) CallTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "callTimestamp")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CallTimestamp is a free data retrieval call binding the contract method 0xf209883a.
//
// Solidity: function callTimestamp() view returns(uint256)
func (_WalletUtils *WalletUtilsSession) CallTimestamp() (*big.Int, error) {
	return _WalletUtils.Contract.CallTimestamp(&_WalletUtils.CallOpts)
}

// CallTimestamp is a free data retrieval call binding the contract method 0xf209883a.
//
// Solidity: function callTimestamp() view returns(uint256)
func (_WalletUtils *WalletUtilsCallerSession) CallTimestamp() (*big.Int, error) {
	return _WalletUtils.Contract.CallTimestamp(&_WalletUtils.CallOpts)
}

// KnownImageHashes is a free data retrieval call binding the contract method 0x7ae99638.
//
// Solidity: function knownImageHashes(address ) view returns(bytes32)
func (_WalletUtils *WalletUtilsCaller) KnownImageHashes(opts *bind.CallOpts, arg0 common.Address) ([32]byte, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "knownImageHashes", arg0)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// KnownImageHashes is a free data retrieval call binding the contract method 0x7ae99638.
//
// Solidity: function knownImageHashes(address ) view returns(bytes32)
func (_WalletUtils *WalletUtilsSession) KnownImageHashes(arg0 common.Address) ([32]byte, error) {
	return _WalletUtils.Contract.KnownImageHashes(&_WalletUtils.CallOpts, arg0)
}

// KnownImageHashes is a free data retrieval call binding the contract method 0x7ae99638.
//
// Solidity: function knownImageHashes(address ) view returns(bytes32)
func (_WalletUtils *WalletUtilsCallerSession) KnownImageHashes(arg0 common.Address) ([32]byte, error) {
	return _WalletUtils.Contract.KnownImageHashes(&_WalletUtils.CallOpts, arg0)
}

// LastImageHashUpdate is a free data retrieval call binding the contract method 0x1551f0ab.
//
// Solidity: function lastImageHashUpdate(bytes32 ) view returns(uint256)
func (_WalletUtils *WalletUtilsCaller) LastImageHashUpdate(opts *bind.CallOpts, arg0 [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "lastImageHashUpdate", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LastImageHashUpdate is a free data retrieval call binding the contract method 0x1551f0ab.
//
// Solidity: function lastImageHashUpdate(bytes32 ) view returns(uint256)
func (_WalletUtils *WalletUtilsSession) LastImageHashUpdate(arg0 [32]byte) (*big.Int, error) {
	return _WalletUtils.Contract.LastImageHashUpdate(&_WalletUtils.CallOpts, arg0)
}

// LastImageHashUpdate is a free data retrieval call binding the contract method 0x1551f0ab.
//
// Solidity: function lastImageHashUpdate(bytes32 ) view returns(uint256)
func (_WalletUtils *WalletUtilsCallerSession) LastImageHashUpdate(arg0 [32]byte) (*big.Int, error) {
	return _WalletUtils.Contract.LastImageHashUpdate(&_WalletUtils.CallOpts, arg0)
}

// LastSignerUpdate is a free data retrieval call binding the contract method 0x1cd05dc4.
//
// Solidity: function lastSignerUpdate(address ) view returns(uint256)
func (_WalletUtils *WalletUtilsCaller) LastSignerUpdate(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "lastSignerUpdate", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LastSignerUpdate is a free data retrieval call binding the contract method 0x1cd05dc4.
//
// Solidity: function lastSignerUpdate(address ) view returns(uint256)
func (_WalletUtils *WalletUtilsSession) LastSignerUpdate(arg0 common.Address) (*big.Int, error) {
	return _WalletUtils.Contract.LastSignerUpdate(&_WalletUtils.CallOpts, arg0)
}

// LastSignerUpdate is a free data retrieval call binding the contract method 0x1cd05dc4.
//
// Solidity: function lastSignerUpdate(address ) view returns(uint256)
func (_WalletUtils *WalletUtilsCallerSession) LastSignerUpdate(arg0 common.Address) (*big.Int, error) {
	return _WalletUtils.Contract.LastSignerUpdate(&_WalletUtils.CallOpts, arg0)
}

// LastWalletUpdate is a free data retrieval call binding the contract method 0xe717aba9.
//
// Solidity: function lastWalletUpdate(address ) view returns(uint256)
func (_WalletUtils *WalletUtilsCaller) LastWalletUpdate(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "lastWalletUpdate", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LastWalletUpdate is a free data retrieval call binding the contract method 0xe717aba9.
//
// Solidity: function lastWalletUpdate(address ) view returns(uint256)
func (_WalletUtils *WalletUtilsSession) LastWalletUpdate(arg0 common.Address) (*big.Int, error) {
	return _WalletUtils.Contract.LastWalletUpdate(&_WalletUtils.CallOpts, arg0)
}

// LastWalletUpdate is a free data retrieval call binding the contract method 0xe717aba9.
//
// Solidity: function lastWalletUpdate(address ) view returns(uint256)
func (_WalletUtils *WalletUtilsCallerSession) LastWalletUpdate(arg0 common.Address) (*big.Int, error) {
	return _WalletUtils.Contract.LastWalletUpdate(&_WalletUtils.CallOpts, arg0)
}

// RequireMinNonce is a free data retrieval call binding the contract method 0xb472f0a2.
//
// Solidity: function requireMinNonce(address _wallet, uint256 _nonce) view returns()
func (_WalletUtils *WalletUtilsCaller) RequireMinNonce(opts *bind.CallOpts, _wallet common.Address, _nonce *big.Int) error {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "requireMinNonce", _wallet, _nonce)

	if err != nil {
		return err
	}

	return err

}

// RequireMinNonce is a free data retrieval call binding the contract method 0xb472f0a2.
//
// Solidity: function requireMinNonce(address _wallet, uint256 _nonce) view returns()
func (_WalletUtils *WalletUtilsSession) RequireMinNonce(_wallet common.Address, _nonce *big.Int) error {
	return _WalletUtils.Contract.RequireMinNonce(&_WalletUtils.CallOpts, _wallet, _nonce)
}

// RequireMinNonce is a free data retrieval call binding the contract method 0xb472f0a2.
//
// Solidity: function requireMinNonce(address _wallet, uint256 _nonce) view returns()
func (_WalletUtils *WalletUtilsCallerSession) RequireMinNonce(_wallet common.Address, _nonce *big.Int) error {
	return _WalletUtils.Contract.RequireMinNonce(&_WalletUtils.CallOpts, _wallet, _nonce)
}

// RequireNonExpired is a free data retrieval call binding the contract method 0x7f29d538.
//
// Solidity: function requireNonExpired(uint256 _expiration) view returns()
func (_WalletUtils *WalletUtilsCaller) RequireNonExpired(opts *bind.CallOpts, _expiration *big.Int) error {
	var out []interface{}
	err := _WalletUtils.contract.Call(opts, &out, "requireNonExpired", _expiration)

	if err != nil {
		return err
	}

	return err

}

// RequireNonExpired is a free data retrieval call binding the contract method 0x7f29d538.
//
// Solidity: function requireNonExpired(uint256 _expiration) view returns()
func (_WalletUtils *WalletUtilsSession) RequireNonExpired(_expiration *big.Int) error {
	return _WalletUtils.Contract.RequireNonExpired(&_WalletUtils.CallOpts, _expiration)
}

// RequireNonExpired is a free data retrieval call binding the contract method 0x7f29d538.
//
// Solidity: function requireNonExpired(uint256 _expiration) view returns()
func (_WalletUtils *WalletUtilsCallerSession) RequireNonExpired(_expiration *big.Int) error {
	return _WalletUtils.Contract.RequireNonExpired(&_WalletUtils.CallOpts, _expiration)
}

// MultiCall is a paid mutator transaction binding the contract method 0xffd7d741.
//
// Solidity: function multiCall((bool,bool,uint256,address,uint256,bytes)[] _txs) payable returns(bool[] _successes, bytes[] _results)
func (_WalletUtils *WalletUtilsTransactor) MultiCall(opts *bind.TransactOpts, _txs []IModuleCallsTransaction) (*types.Transaction, error) {
	return _WalletUtils.contract.Transact(opts, "multiCall", _txs)
}

// MultiCall is a paid mutator transaction binding the contract method 0xffd7d741.
//
// Solidity: function multiCall((bool,bool,uint256,address,uint256,bytes)[] _txs) payable returns(bool[] _successes, bytes[] _results)
func (_WalletUtils *WalletUtilsSession) MultiCall(_txs []IModuleCallsTransaction) (*types.Transaction, error) {
	return _WalletUtils.Contract.MultiCall(&_WalletUtils.TransactOpts, _txs)
}

// MultiCall is a paid mutator transaction binding the contract method 0xffd7d741.
//
// Solidity: function multiCall((bool,bool,uint256,address,uint256,bytes)[] _txs) payable returns(bool[] _successes, bytes[] _results)
func (_WalletUtils *WalletUtilsTransactorSession) MultiCall(_txs []IModuleCallsTransaction) (*types.Transaction, error) {
	return _WalletUtils.Contract.MultiCall(&_WalletUtils.TransactOpts, _txs)
}

// PublishConfig is a paid mutator transaction binding the contract method 0x44d466c2.
//
// Solidity: function publishConfig(address _wallet, uint256 _threshold, (uint256,address)[] _members, bool _index) returns()
func (_WalletUtils *WalletUtilsTransactor) PublishConfig(opts *bind.TransactOpts, _wallet common.Address, _threshold *big.Int, _members []RequireUtilsMember, _index bool) (*types.Transaction, error) {
	return _WalletUtils.contract.Transact(opts, "publishConfig", _wallet, _threshold, _members, _index)
}

// PublishConfig is a paid mutator transaction binding the contract method 0x44d466c2.
//
// Solidity: function publishConfig(address _wallet, uint256 _threshold, (uint256,address)[] _members, bool _index) returns()
func (_WalletUtils *WalletUtilsSession) PublishConfig(_wallet common.Address, _threshold *big.Int, _members []RequireUtilsMember, _index bool) (*types.Transaction, error) {
	return _WalletUtils.Contract.PublishConfig(&_WalletUtils.TransactOpts, _wallet, _threshold, _members, _index)
}

// PublishConfig is a paid mutator transaction binding the contract method 0x44d466c2.
//
// Solidity: function publishConfig(address _wallet, uint256 _threshold, (uint256,address)[] _members, bool _index) returns()
func (_WalletUtils *WalletUtilsTransactorSession) PublishConfig(_wallet common.Address, _threshold *big.Int, _members []RequireUtilsMember, _index bool) (*types.Transaction, error) {
	return _WalletUtils.Contract.PublishConfig(&_WalletUtils.TransactOpts, _wallet, _threshold, _members, _index)
}

// PublishInitialSigners is a paid mutator transaction binding the contract method 0x7082503b.
//
// Solidity: function publishInitialSigners(address _wallet, bytes32 _hash, uint256 _sizeMembers, bytes _signature, bool _index) returns()
func (_WalletUtils *WalletUtilsTransactor) PublishInitialSigners(opts *bind.TransactOpts, _wallet common.Address, _hash [32]byte, _sizeMembers *big.Int, _signature []byte, _index bool) (*types.Transaction, error) {
	return _WalletUtils.contract.Transact(opts, "publishInitialSigners", _wallet, _hash, _sizeMembers, _signature, _index)
}

// PublishInitialSigners is a paid mutator transaction binding the contract method 0x7082503b.
//
// Solidity: function publishInitialSigners(address _wallet, bytes32 _hash, uint256 _sizeMembers, bytes _signature, bool _index) returns()
func (_WalletUtils *WalletUtilsSession) PublishInitialSigners(_wallet common.Address, _hash [32]byte, _sizeMembers *big.Int, _signature []byte, _index bool) (*types.Transaction, error) {
	return _WalletUtils.Contract.PublishInitialSigners(&_WalletUtils.TransactOpts, _wallet, _hash, _sizeMembers, _signature, _index)
}

// PublishInitialSigners is a paid mutator transaction binding the contract method 0x7082503b.
//
// Solidity: function publishInitialSigners(address _wallet, bytes32 _hash, uint256 _sizeMembers, bytes _signature, bool _index) returns()
func (_WalletUtils *WalletUtilsTransactorSession) PublishInitialSigners(_wallet common.Address, _hash [32]byte, _sizeMembers *big.Int, _signature []byte, _index bool) (*types.Transaction, error) {
	return _WalletUtils.Contract.PublishInitialSigners(&_WalletUtils.TransactOpts, _wallet, _hash, _sizeMembers, _signature, _index)
}

// WalletUtilsRequiredConfigIterator is returned from FilterRequiredConfig and is used to iterate over the raw logs and unpacked data for RequiredConfig events raised by the WalletUtils contract.
type WalletUtilsRequiredConfigIterator struct {
	Event *WalletUtilsRequiredConfig // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *WalletUtilsRequiredConfigIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(WalletUtilsRequiredConfig)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(WalletUtilsRequiredConfig)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *WalletUtilsRequiredConfigIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *WalletUtilsRequiredConfigIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// WalletUtilsRequiredConfig represents a RequiredConfig event raised by the WalletUtils contract.
type WalletUtilsRequiredConfig struct {
	Wallet    common.Address
	ImageHash [32]byte
	Threshold *big.Int
	Signers   []byte
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterRequiredConfig is a free log retrieval operation binding the contract event 0xb502b7446ca079086188acf3abef47c2f464f2ee9a72fcdf05ffcb74dcc17cee.
//
// Solidity: event RequiredConfig(address indexed _wallet, bytes32 indexed _imageHash, uint256 _threshold, bytes _signers)
func (_WalletUtils *WalletUtilsFilterer) FilterRequiredConfig(opts *bind.FilterOpts, _wallet []common.Address, _imageHash [][32]byte) (*WalletUtilsRequiredConfigIterator, error) {

	var _walletRule []interface{}
	for _, _walletItem := range _wallet {
		_walletRule = append(_walletRule, _walletItem)
	}
	var _imageHashRule []interface{}
	for _, _imageHashItem := range _imageHash {
		_imageHashRule = append(_imageHashRule, _imageHashItem)
	}

	logs, sub, err := _WalletUtils.contract.FilterLogs(opts, "RequiredConfig", _walletRule, _imageHashRule)
	if err != nil {
		return nil, err
	}
	return &WalletUtilsRequiredConfigIterator{contract: _WalletUtils.contract, event: "RequiredConfig", logs: logs, sub: sub}, nil
}

// WatchRequiredConfig is a free log subscription operation binding the contract event 0xb502b7446ca079086188acf3abef47c2f464f2ee9a72fcdf05ffcb74dcc17cee.
//
// Solidity: event RequiredConfig(address indexed _wallet, bytes32 indexed _imageHash, uint256 _threshold, bytes _signers)
func (_WalletUtils *WalletUtilsFilterer) WatchRequiredConfig(opts *bind.WatchOpts, sink chan<- *WalletUtilsRequiredConfig, _wallet []common.Address, _imageHash [][32]byte) (event.Subscription, error) {

	var _walletRule []interface{}
	for _, _walletItem := range _wallet {
		_walletRule = append(_walletRule, _walletItem)
	}
	var _imageHashRule []interface{}
	for _, _imageHashItem := range _imageHash {
		_imageHashRule = append(_imageHashRule, _imageHashItem)
	}

	logs, sub, err := _WalletUtils.contract.WatchLogs(opts, "RequiredConfig", _walletRule, _imageHashRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(WalletUtilsRequiredConfig)
				if err := _WalletUtils.contract.UnpackLog(event, "RequiredConfig", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRequiredConfig is a log parse operation binding the contract event 0xb502b7446ca079086188acf3abef47c2f464f2ee9a72fcdf05ffcb74dcc17cee.
//
// Solidity: event RequiredConfig(address indexed _wallet, bytes32 indexed _imageHash, uint256 _threshold, bytes _signers)
func (_WalletUtils *WalletUtilsFilterer) ParseRequiredConfig(log types.Log) (*WalletUtilsRequiredConfig, error) {
	event := new(WalletUtilsRequiredConfig)
	if err := _WalletUtils.contract.UnpackLog(event, "RequiredConfig", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// WalletUtilsRequiredSignerIterator is returned from FilterRequiredSigner and is used to iterate over the raw logs and unpacked data for RequiredSigner events raised by the WalletUtils contract.
type WalletUtilsRequiredSignerIterator struct {
	Event *WalletUtilsRequiredSigner // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *WalletUtilsRequiredSignerIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(WalletUtilsRequiredSigner)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(WalletUtilsRequiredSigner)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *WalletUtilsRequiredSignerIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *WalletUtilsRequiredSignerIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// WalletUtilsRequiredSigner represents a RequiredSigner event raised by the WalletUtils contract.
type WalletUtilsRequiredSigner struct {
	Wallet common.Address
	Signer common.Address
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterRequiredSigner is a free log retrieval operation binding the contract event 0x600ba597427f042bcd559a0d06fa1732cc104d6dd43cbe8845b5a0e804b2b39f.
//
// Solidity: event RequiredSigner(address indexed _wallet, address indexed _signer)
func (_WalletUtils *WalletUtilsFilterer) FilterRequiredSigner(opts *bind.FilterOpts, _wallet []common.Address, _signer []common.Address) (*WalletUtilsRequiredSignerIterator, error) {

	var _walletRule []interface{}
	for _, _walletItem := range _wallet {
		_walletRule = append(_walletRule, _walletItem)
	}
	var _signerRule []interface{}
	for _, _signerItem := range _signer {
		_signerRule = append(_signerRule, _signerItem)
	}

	logs, sub, err := _WalletUtils.contract.FilterLogs(opts, "RequiredSigner", _walletRule, _signerRule)
	if err != nil {
		return nil, err
	}
	return &WalletUtilsRequiredSignerIterator{contract: _WalletUtils.contract, event: "RequiredSigner", logs: logs, sub: sub}, nil
}

// WatchRequiredSigner is a free log subscription operation binding the contract event 0x600ba597427f042bcd559a0d06fa1732cc104d6dd43cbe8845b5a0e804b2b39f.
//
// Solidity: event RequiredSigner(address indexed _wallet, address indexed _signer)
func (_WalletUtils *WalletUtilsFilterer) WatchRequiredSigner(opts *bind.WatchOpts, sink chan<- *WalletUtilsRequiredSigner, _wallet []common.Address, _signer []common.Address) (event.Subscription, error) {

	var _walletRule []interface{}
	for _, _walletItem := range _wallet {
		_walletRule = append(_walletRule, _walletItem)
	}
	var _signerRule []interface{}
	for _, _signerItem := range _signer {
		_signerRule = append(_signerRule, _signerItem)
	}

	logs, sub, err := _WalletUtils.contract.WatchLogs(opts, "RequiredSigner", _walletRule, _signerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(WalletUtilsRequiredSigner)
				if err := _WalletUtils.contract.UnpackLog(event, "RequiredSigner", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRequiredSigner is a log parse operation binding the contract event 0x600ba597427f042bcd559a0d06fa1732cc104d6dd43cbe8845b5a0e804b2b39f.
//
// Solidity: event RequiredSigner(address indexed _wallet, address indexed _signer)
func (_WalletUtils *WalletUtilsFilterer) ParseRequiredSigner(log types.Log) (*WalletUtilsRequiredSigner, error) {
	event := new(WalletUtilsRequiredSigner)
	if err := _WalletUtils.contract.UnpackLog(event, "RequiredSigner", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
